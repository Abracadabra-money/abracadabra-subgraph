specVersion: 0.0.5
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: Pool
    network: {{ network }}
    source:
      address: "{{ curve.pool.address }}"
      abi: Pool
      startBlock: {{ curve.pool.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Account
      abis:
        - name: Pool
          file: ./abis/Pool.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: AddLiquidity(indexed address,uint256[],uint256[],uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(indexed address,uint256[],uint256[],uint256)
          handler: handleRemoveLiquidity
        - event: RemoveLiquidityOne(indexed address,int128,uint256,uint256,uint256)
          handler: handleRemoveLiquidityOne
        - event: RemoveLiquidityImbalance(indexed address,uint256[],uint256[],uint256,uint256)
          handler: handleRemoveLiquidityImbalance
      file: ./src/mappings/pool.ts
  - kind: ethereum
    name: Stake
    network: {{ network }}
    source:
      address: "{{ curve.stake.address }}"
      abi: Stake
      startBlock: {{ curve.stake.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Account
      abis:
        - name: Stake
          file: ./abis/Stake.json
        - name: Pool
          file: ./abis/Pool.json
      eventHandlers:
        - event: Deposit(indexed address,uint256)
          handler: handleDeposit
        - event: Withdraw(indexed address,uint256)
          handler: handleWithdraw
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/mappings/stake.ts