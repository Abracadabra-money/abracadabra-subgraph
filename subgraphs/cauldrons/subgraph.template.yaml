specVersion: 0.0.5
schema:
  file: ./schema.graphql
dataSources:
  # 1. BentoBox (if applicable)
  {{#bentoBox.enable}}
  - kind: ethereum
    name: BentoBox
    network: {{network}}
    source:
      address: "{{ bentoBox.address }}"
      abi: BentoBox
      startBlock: {{ bentoBox.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - LogDeploy
      abis:
        - name: BentoBox
          file: ./abis/BentoBox.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: Cauldron
          file: ./abis/Cauldron.json
      eventHandlers:
        - event: LogDeploy(indexed address,bytes,indexed address)
          handler: handleLogDeploy
      file: ./src/mappings/core.ts
  {{/bentoBox.enable}}

  # 2. DegenBox (if applicable)
  {{#degenBox.enable}}
  - kind: ethereum
    name: DegenBox
    network: {{network}}
    source:
      address: "{{ degenBox.address }}"
      abi: DegenBox
      startBlock: {{ degenBox.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - LogDeploy
      abis:
        - name: DegenBox
          file: ./abis/DegenBox.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: Cauldron
          file: ./abis/Cauldron.json
      eventHandlers:
        - event: LogDeploy(indexed address,bytes,indexed address)
          handler: handleLogDeploy
      file: ./src/mappings/core.ts
  {{/degenBox.enable}}

  # 5. LevelFinance (if applicable)
  {{#levelFinance.enable}}
  - kind: ethereum
    name: LevelFinance
    network: {{network}}
    source:
      address: "{{ levelFinance.address }}"
      abi: MagicLevelHarvestor
      startBlock: {{ levelFinance.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - LevelFinance
      abis:
        - name: LevelFinanceLPToken
          file: ./abis/LevelFinanceLPToken.json
        - name: MagicLevelHarvestor
          file: ./abis/MagicLevelHarvestor.json
        - name: LevelFinanceLiquidityPool
          file: ./abis/LevelFinanceLiquidityPool.json
        - name: MagicLevel
          file: ./abis/MagicLevel.json
      eventHandlers:
        - event: LogHarvest(indexed address,uint256,uint256,uint256)
          handler: handleLogHarvest
      file: ./src/mappings/level-finance.ts
  {{/levelFinance.enable}}
templates:
  - name: Cauldron
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: Cauldron
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/cauldron.ts
      entities:
        - Cauldron
      abis:
        - name: Cauldron
          file: ./abis/Cauldron.json
        - name: DegenBox
          file: ./abis/DegenBox.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: Oracle
          file: ./abis/Oracle.json
      eventHandlers:
        - event: LogAddCollateral(indexed address,indexed address,uint256)
          handler: handleLogAddCollateral
        - event: LogRemoveCollateral(indexed address,indexed address,uint256)
          handler: handleLogRemoveCollateral
        - event: LogBorrow(indexed address,indexed address,uint256,uint256)
          handler: handleLogBorrow
        - event: LogRepay(indexed address,indexed address,uint256,uint256)
          handler: handleLogRepay
        - event: LogExchangeRate(uint256)
          handler: handleLogExchangeRate
        - event: LogAccrue(uint128)
          handler: handleLogAccrue
